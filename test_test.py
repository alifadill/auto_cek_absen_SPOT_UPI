# What-To-Do Next for this fucking code
# 1. Validasi masuk atau absennya dengan parameter
#cd2 #      Masuk <i class="fa fa-check-circle" style="color:green;"></i>
#      Absen <i class="fa fa-times-circle" style="color:red;"></i>
#cd6 # 2. Input for GREAT UI wkwk (user)
#cd4 # 3. Finish when pert belum terbuka
     # <div class="tab-content">
#cd1 cd5   # <!-- MATERI -->
#cd3    #   <div>
    #       <div class="alert alert-warning">Data Risalah Perkuliahan &amp; Presensi masih kosong <br><br>
    #  css=.tab-content > div > .table tr:nth-child(1) > th
    #  css=.tab-content > div > .alert 
    #       </div>
    #   </div>
    #</div>


# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestTest():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_test(self):
#access URL
    kode_absen = 516288

    # total_pert = 16

    batas_pert = 14
    # pert = total_pert - (total_pert - batas_pert)
    path_absen = kode_absen

    for x in range(1,1+batas_pert):
      
      #https://spot.upi.edu/mhs/monitoring/2210008173/516288
      self.driver.get("https://spot.upi.edu/mhs/monitoring/2210008173/" + str(path_absen)) 

      if(path_absen == kode_absen):
    #set Windows
        self.driver.set_window_size(1354, 1566) #677, 783
    #Login
        self.driver.find_element(By.ID, "username").send_keys("2001657")
        self.driver.find_element(By.ID, "password").send_keys("f") #6 digit
        self.driver.find_element(By.NAME, "submit").click()
  #checking
      # for x in range(2,17):
      element = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(5) > td:nth-child(3)")
      actions = ActionChains(self.driver)
      actions.move_to_element(element).perform()
      self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(5) > td:nth-child(3)").click()
      elements = self.driver.find_elements(By.CSS_SELECTOR, "tr:nth-child(5) > td:nth-child(3)")
      assert len(elements) > 0
      assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(5) > td:nth-child(3)").text == "ALI AZIZ FADILLAH"
      time.sleep(5)
      elements = self.driver.find_elements(By.CSS_SELECTOR, "tr:nth-child(5) .fa")
      assert len(elements) > 0

      path_absen = path_absen+1
      # dropdown = self.driver.find_element(By.NAME, "id_pt")
      # dropdown.find_element(By.CSS_SELECTOR, )
      # dropdown.find_element(By.XPATH, "//option[. = 'Pertemuan 3']").click()
      # assert self.driver.find_element(By.CSS_SELECTOR, ".font-light").text == "PERTEMUAN 3"

      # no_pert = str(x)
      # path_pertemuan = "\"//option[. = 'Pertemuan " + no_pert + "']\""
      # dropdown = self.driver.find_element(By.NAME, "id_pt")
      # dropdown.find_element(By.NAME, path_pertemuan ).click()
      # pert = "PERTEMUAN " + no_pert
      # assert self.driver.find_element(By.CSS_SELECTOR, ".font-light").text == pert

    
  
